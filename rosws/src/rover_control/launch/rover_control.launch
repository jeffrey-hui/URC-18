<launch>
    <arg name="use_fake" default="false"/>
    <arg name="arm" default="true"/>
    <arg name="gripper_type" default="normal_gripper"/>

    <group if="$(arg use_fake)">
        <arg name="controllers"
             default="joint_state_controller wheel_diff_drive_controller"/>
        <arg name="controllers_off" default="left_wheels_controller right_wheels_controller" />
        <rosparam file="$(find rover_control)/config/rover_controllers_fake.yaml" command="load"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
              args="$(arg controllers)"/>
        <node name="controller_spawner_off" pkg="controller_manager" type="spawner" respawn="false" output="screen"
              args="--stopped $(arg controllers_off)" />
    </group>
    <group unless="$(arg use_fake)">
        <arg name="controllers"
             default="joint_state_controller left_wheels_controller right_wheels_controller arm_manual_controller"/>
        <rosparam file="$(find rover_control)/config/rover_controllers.yaml" command="load"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
              args="$(arg controllers)"/>
        <node name="hw_node" pkg="rover_hw" type="rover_hw_node" output="screen"/>
    </group>

    <group if="$(arg arm)">
        <group if="$(arg use_fake)">
            <rosparam file="$(find rover_control)/config/fake/rover_controllers_$(arg gripper_type).yaml" command="load"/>
        </group>
        <group unless="$(arg use_fake)">
            <rosparam file="$(find rover_control)/config/rover_controllers_$(arg gripper_type).yaml" command="load"/>
        </group>
    </group>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
          respawn="false">
    </node>
</launch>
